package(default_visibility=["//visibility:public"])
load("@npm_bazel_typescript//:index.bzl", "ts_library", "ts_config")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("@build_bazel_rules_nodejs//:index.bzl", "copy_to_bin", "nodejs_binary")

# Additionally to the compiled files we need the jsons files for execution
copy_to_bin(
  name = "copy_jsons",
  srcs = ["collection.json", "builders.json", "package.json"] + glob(
    include = ["src/**/*.json"]
  )
)

# nodejs_binary(
#     name = "test",
#     data = ["//libs/workspace"],
#     entry_point = ":src/scripts/affected-args.bundled.js",
# )

rollup_bundle(
    name = "workspace",
    format = "cjs",
    config_file = ":rollup.config.js",
    entry_points = {
      'src/scripts/affected-args.ts': 'src/scripts/affected-args.bundle.ts'
    },
    deps = [
      "@npm//@rollup/plugin-json",
      "@npm//rollup-plugin-commonjs",
      "@npm//rollup-plugin-node-resolve",
      "compile"
    ],
)

# filegroup(
#     name = "compiled_output",
#     srcs = ["compile"],
#     # Change to es6_sources to get the 'prodmode' JS
#     output_group = "es6_sources",
# )

ts_library(
  name = "compile",
  srcs = glob(
    include = ["src/**/*.ts"],
    exclude = ["**/*.spec.ts", "src/test-setup.ts"],
  ),
  # prodmode_module = "commonjs",
  tsconfig = "tsconfig_lib",
  module_name = "@dynatrace/workspace",
  module_root = "src",
  data = [":copy_jsons"],
  deps = [
    "@npm//@angular-devkit/architect",
    "@npm//@angular-devkit/build-ng-packagr",
    "@npm//@angular-devkit/core",
    "@npm//@angular/cli",
    "@npm//@nrwl/workspace",
    "@npm//@octokit/rest",
    "@npm//@types/node",
    "@npm//axios",
    "@npm//chalk",
    "@npm//tslib",
    "@npm//d3-array",
    "@npm//d3-cam02",
    "@npm//d3-color",
    "@npm//d3-hsluv",
    "@npm//d3-scale",
    "@npm//glob",
    "@npm//lodash",
    "@npm//lodash-es",
    "@npm//memfs",
    "@npm//rxjs",
    "@npm//sass-graph",
    "@npm//stylelint",
    "@npm//theo",
    "@npm//xml2js",
    "@npm//xmlbuilder",
    "@npm//yargs",
    "//libs/shared/node",
  ],
)

ts_config(
  name = "tsconfig_lib",
  src = "tsconfig.lib.json",
  deps = [
    "tsconfig.json",
    "//:tsconfig.json"
  ]
)
